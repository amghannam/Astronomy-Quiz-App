/**
 * 
 */
package utils;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;

/**
 * @author Ahmed
 *
 */
public class ReportGenerator {
	private static int reportId = 1;
	private static boolean hasGeneratedReport = false; 

	private static String constructReport(Result result) {
		StringBuilder report = new StringBuilder();
		Date date = new Date();
		// title
		report.append("\t\t\t************************************")
				.append("\n\t\t\tASTRONOMY QUIZ AUTO-GENERATED REPORT")
				.append("\n\t\t\t************************************")
				// data
				.append("\n\n- Session ID: ".concat(String.valueOf(reportId))).append("\n- Total score: ")
				.append(String.valueOf(result.getScore()).concat(" / 15")).append("\n- Total score percentage: ")
				.append(String.valueOf(result.getPercentage()).concat("%"))
				.append("\n- Number of questions answered incorrectly: ")
				.append(String.valueOf(result.getIncorrectAnswerCount()))
				.append("\n- Question(s) answered incorrectly: ")
				.append(String.valueOf(result.getIncorrectlyAnswered()))
				.append("\n- Total time taken to complete quiz: ")
				.append(String.valueOf(result.getElapsedTime()).concat(" minutes"))
				// closing message
				.append("\n\n*** This report was autogenerated by Astronomy Quiz on ").append(date.toString())
				.append(".***");
		return report.toString();
	}

	private static void toFile() throws Exception {
		File desktop = new File(System.getProperty("user.home"), "/Desktop"); 
		String fileName = "score_report_".concat(String.valueOf(reportId)).concat(".txt");
		File fullPath = new File(desktop, fileName); 
		String data = constructReport(new Result());
		try (Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(fullPath), "utf-8"))) {
			writer.write(data);
		} 
		hasGeneratedReport = true; 
		updateId();
	}

	public static void generate() {
		try {
			toFile();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static void updateId() {
		reportId = ThreadLocalRandom.current().nextInt(2, 1000 + 1);
	}
	
	public static boolean hasGeneratedReport() {
		return hasGeneratedReport == true; 
	}
	
	public static void reset() {
		hasGeneratedReport = false; 
	}
}
